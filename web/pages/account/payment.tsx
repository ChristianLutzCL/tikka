import Head from 'next/head'
import Header from '../../modules/dashboard/header'
import Sidebar from '../../modules/dashboard/sidebar'
import {useEffect, useState} from 'react'
import {supabase} from '../../utils/supabaseClient'
import Image from 'next/image'
import MenetrendInput from '../../components/menetrendinput'
import Button from '../../components/button'
import img from '../../public/image.png'
import {AiOutlineSetting} from 'react-icons/ai'
import {FaMoneyBill} from 'react-icons/fa'

export default function Payment() {
  const [loading, setLoading] = useState(true)
  const [username, setUsername] = useState(null)
  const [first_name, setFirstName] = useState(null)
  const [last_name, setLastName] = useState(null)
  const [email, setEmail] = useState(null)
  const [bio, setBio] = useState(null)
  const [website, setWebsite] = useState(null)
  const [avatar_url, setAvatarUrl] = useState(null)

  useEffect(() => {
    getProfile()
  }, [])

  async function getProfile() {
    try {
      setLoading(true)
      const user = supabase.auth.user()

      let {data, error, status} = await supabase
        .from('profiles')
        .select(
          `username, first_name, last_name, bio, email, website, avatar_url`
        )
        .eq('id', user.id)
        .single()

      if (error && status !== 406) {
        throw error
      }

      if (data) {
        setUsername(data.username)
        setFirstName(data.first_name)
        setLastName(data.last_name)
        setEmail(data.email)
        setBio(data.bio)
        setWebsite(data.website)
        setAvatarUrl(data.avatar_url)
      }
    } catch (error) {
      console.log(error.message)
    } finally {
      setLoading(false)
    }
  }

  async function updateProfile({
    username,
    first_name,
    last_name,
    email,
    bio,
    website,
    avatar_url,
  }) {
    try {
      setLoading(true)
      const user = supabase.auth.user()

      const updates = {
        id: user.id,
        username,
        first_name,
        last_name,
        email,
        bio,
        website,
        avatar_url,
        updated_at: new Date(),
      }

      let {error} = await supabase.from('profiles').upsert(updates, {
        returning: 'minimal', // Don't return the value after inserting
      })

      if (error) {
        throw error
      }
    } catch (error) {
      console.log(error.message)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className='overflow-x-hidden'>
      <Head>
        <title>Menetrend - Settings</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex bg-gray-200 dark:bg-gray-900 h-screen overflow-hidden text-background dark:text-white'>
        <Header />
        <Sidebar />
        <div className='mt-24 ml-8 mr-8 w-2/3 text-background dark:text-white'>
          <div className='text-3xl font-bold flex items-center space-x-2'>
            <div className='bg-gray-300 dark:bg-gray-800 h-10 w-10 flex justify-center items-center rounded-md text-gray-700 dark:text-white'>
              <FaMoneyBill />
            </div>
            <div>Payment</div>
          </div>
          <div className='mt-12 mr-8 w-2/3 text-background dark:text-white'>
            <div className='grid bg-white dark:bg-gray-800 shadow-md rounded-md border border-gray-600 overflow-hidden'>
              <div className='p-4 grid'>
                <span className='font-normal text-gray-400 text-sm'>
                  Current subscription
                </span>
                <span className='font-bold text-xl'>Freelancer</span>
              </div>
              <div className='flex items-center bg-gray-100 dark:bg-gray-700 p-4 border-t border-gray-600 justify-between'>
                <span className='font-light'>
                  Manage your subscriptions on Stripe
                </span>
                <button className='bg-gray-900 text-white py-2 px-4 rounded-md hover:bg-gray-800'>
                  Open Customer Portal
                </button>
              </div>
            </div>
          </div>
          <section className='bg-gray-800 p-4 mt-4 rounded-md'>
            <div className='product'>
              <div className='description'>
                <h3>Enterprise</h3>
                <h5>$27.00 / month</h5>
              </div>
            </div>
            <form action='/account/checkout' method='POST'>
              {/* Add a hidden field with the lookup_key of your Price */}
              <input type='hidden' name='lookup_key' value='enterprise' />
              <button id='checkout-and-portal-button' type='submit'>
                Checkout
              </button>
            </form>
          </section>
          <div className='space-y-6'></div>
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps() {
  return {
    props: {
      protected: true,
    },
  }
}
