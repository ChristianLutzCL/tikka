/* eslint-disable react/jsx-no-comment-textnodes */
import Head from 'next/head'
import Header from '../../modules/dashboard/header'
import Sidebar from '../../modules/dashboard/sidebar'
import {useEffect, useState, Fragment} from 'react'
import {supabase} from '../../utils/supabaseClient'
import Image from 'next/image'
import MenetrendInput from '../../components/menetrendinput'
import Button from '../../components/button'
import img from '../../public/image.png'
import {AiOutlineSetting} from 'react-icons/ai'
import ProfileImageSettings from '../../modules/dashboard/profileimagesettings'
import {Listbox, Transition} from '@headlessui/react'
import {CheckIcon, SelectorIcon} from '@heroicons/react/solid'
import {useTheme} from 'next-themes'

const themes = [
  {name: 'Light', ident: 'light'},
  {name: 'Dark', ident: 'dark'},
  {name: 'System', ident: 'system'},
]

export default function Settings() {
  const [loading, setLoading] = useState(true)
  const [username, setUsername] = useState(null)
  const [first_name, setFirstName] = useState(null)
  const [last_name, setLastName] = useState(null)
  const [email, setEmail] = useState(null)
  const [bio, setBio] = useState(null)
  const [website, setWebsite] = useState(null)

  const [selectedTheme, setSelectedTheme] = useState(themes[0])
  const {systemTheme, theme, setTheme} = useTheme()
  const currentTheme = theme === 'system' ? systemTheme : theme

  useEffect(() => {
    getProfile()
  }, [])

  async function getProfile() {
    try {
      setLoading(true)
      const user = supabase.auth.user()

      let {data, error, status} = await supabase
        .from('profiles')
        .select(
          `username, first_name, last_name, bio, email, website, avatar_url, theme`
        )
        .eq('id', user.id)
        .single()

      if (error && status !== 406) {
        throw error
      }

      if (data) {
        setUsername(data.username)
        setFirstName(data.first_name)
        setLastName(data.last_name)
        setEmail(data.email)
        setBio(data.bio)
        setWebsite(data.website)
        setTheme(data.theme)
      }
    } catch (error) {
      console.log(error.message)
    } finally {
      setLoading(false)
    }
  }

  async function updateProfile({
    username,
    first_name,
    last_name,
    email,
    bio,
    website,
    avatar_url,
    theme,
  }) {
    try {
      setLoading(true)
      const user = supabase.auth.user()

      const updates = {
        id: user.id,
        username,
        first_name,
        last_name,
        email,
        bio,
        website,
        avatar_url,
        theme,
        updated_at: new Date(),
      }

      let {error} = await supabase.from('profiles').upsert(updates, {
        returning: 'minimal', // Don't return the value after inserting
      })

      if (error) {
        throw error
      }
    } catch (error) {
      console.log(error.message)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className='overflow-x-hidden'>
      <Head>
        <title>Menetrend - Settings</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex bg-gray-200 dark:bg-gray-900 h-screen overflow-hidden text-background dark:text-white'>
        <Header />
        <Sidebar />
        <div className='mt-24 ml-8 mr-8 w-2/3 text-background dark:text-white'>
          <div className='text-3xl font-bold flex items-center space-x-2'>
            <div className='bg-gray-300 dark:bg-gray-800 h-10 w-10 flex justify-center items-center rounded-md text-gray-700 dark:text-white'>
              <AiOutlineSetting />
            </div>
            <div>Settings</div>
          </div>
          <div className='mt-12 ml-8 mr-8 w-2/3 text-background'></div>
          <div className='space-y-6'>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='text-lg font-bold'>Profile Picture</div>
                <div className='text-sm font-medium text-gray-600 dark:text-gray-300'>
                  Will be visible on your profile page
                </div>
              </div>
              <ProfileImageSettings />
            </div>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='text-lg font-bold'>First & Last Name</div>
              </div>
              <div className='flex space-x-2 w-1/3'>
                <MenetrendInput
                  placeholder='First Name'
                  value={first_name}
                  onChange={(e) => setFirstName(e.target.value)}
                  className='flex items-center justify-center focus:ring-ping-800 focus:border-gray-500 focus:outline-none h-8 w-full pl-2 pr-2 sm:text-sm border bg-gray-100 border-gray-300 dark:bg-gray-800 dark:border-gray-700 rounded-md'
                />
                <MenetrendInput
                  placeholder='Last Name'
                  value={last_name}
                  onChange={(e) => setLastName(e.target.value)}
                  className='flex items-center justify-center focus:ring-ping-800 focus:border-gray-500 focus:outline-none h-8 w-full pl-2 pr-2 sm:text-sm border bg-gray-100 border-gray-300 dark:bg-gray-800 dark:border-gray-700 rounded-md'
                />
              </div>
            </div>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='text-lg font-bold'>Email Address</div>
              </div>
              <div className='flex space-x-2 w-1/3'>
                <MenetrendInput
                  placeholder='Email Address'
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className='flex items-center justify-center focus:ring-ping-800 focus:border-gray-500 focus:outline-none h-8 w-full pl-2 pr-2 sm:text-sm border bg-gray-100 border-gray-300 dark:bg-gray-800 dark:border-gray-700 rounded-md'
                />
              </div>
            </div>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='text-lg font-bold'>Write Your Bio</div>
                <div className='text-sm font-medium text-gray-600 dark:text-gray-300'>
                  Will be visible on your profile page
                </div>
              </div>
              <div className='flex space-x-2 w-1/3'>
                <textarea
                  placeholder='Write Your Bio'
                  value={bio}
                  onChange={(e) => setBio(e.target.value)}
                  className='flex items-center justify-center focus:ring-ping-800 focus:border-gray-500 focus:outline-none min-h-6 h-32 w-full pl-2 pt-1 pr-2 sm:text-sm border bg-gray-100 border-gray-300 dark:bg-gray-800 dark:border-gray-700 rounded-md'
                />
              </div>
            </div>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='text-lg font-bold'>Username</div>
                <div className='text-sm font-medium text-gray-600 dark:text-gray-300'>
                  Will be visible on your profile page
                </div>
              </div>
              <div className='flex space-x-2 w-1/3'>
                <MenetrendInput
                  type='text'
                  value={username}
                  onChange={(e) => setUsername(e.target.value)}
                  className='flex items-center justify-center focus:ring-ping-800 focus:border-gray-500 focus:outline-none h-8 w-full pl-2 pr-2 sm:text-sm border bg-gray-100 border-gray-300 dark:bg-gray-800 dark:border-gray-700 rounded-md'
                />
              </div>
            </div>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='text-lg font-bold'>Website URL</div>
                <div className='text-sm font-medium text-gray-600 dark:text-gray-300'>
                  Will be visible on your profile page
                </div>
              </div>
              <div className='flex space-x-2 w-1/3'>
                <MenetrendInput
                  type='text'
                  value={website}
                  onChange={(e) => setWebsite(e.target.value)}
                  className='flex items-center justify-center focus:ring-ping-800 focus:border-gray-500 focus:outline-none h-8 w-full pl-2 pr-2 sm:text-sm border bg-gray-100 border-gray-300 dark:bg-gray-800 dark:border-gray-700 rounded-md'
                />
              </div>
            </div>
            <div className='flex items-center'>
              <div className='w-80'>
                <div className='flex items-center'>
                  <span className='text-lg font-bold'>Theme</span>
                </div>
              </div>
              <div className='flex items-center space-x-2 w-1/3'>
                <Listbox value={selectedTheme} onChange={setSelectedTheme}>
                  <div className='relative mt-1'>
                    <Listbox.Button className='relative border border-gray-300 dark:border-gray-700  w-52 cursor-default rounded-md bg-white dark:bg-gray-800 py-1 pl-3 pr-10 text-left focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-orange-300 sm:text-sm'>
                      <span className='block truncate'>
                        {selectedTheme.name}
                      </span>
                      <span className='pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2'>
                        <SelectorIcon
                          className='h-5 w-5 text-gray-400'
                          aria-hidden='true'
                        />
                      </span>
                    </Listbox.Button>
                    <Transition
                      as={Fragment}
                      leave='transition ease-in duration-100'
                      leaveFrom='opacity-100'
                      leaveTo='opacity-0'>
                      <Listbox.Options className='absolute mt-1 max-h-60 w-full overflow-auto rounded-md bg-white dark:bg-gray-800 py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm'>
                        {themes.map((theme, themeIdx) => (
                          <Listbox.Option
                            key={themeIdx}
                            className={({active}) =>
                              `relative cursor-default select-none py-2 pl-10 pr-4 ${
                                active
                                  ? 'bg-indigo-100 text-indigo-900'
                                  : 'text-gray-900 dark:text-white'
                              }`
                            }
                            value={theme}>
                            {({selected}) => (
                              <>
                                <span
                                  className={`block truncate ${
                                    selected ? 'font-medium' : 'font-normal'
                                  }`}>
                                  {theme.name}
                                </span>
                                {selected ? (
                                  <span className='absolute inset-y-0 left-0 flex items-center pl-3 text-indigo-600'>
                                    <CheckIcon
                                      className='h-5 w-5'
                                      aria-hidden='true'
                                    />
                                  </span>
                                ) : null}
                              </>
                            )}
                          </Listbox.Option>
                        ))}
                      </Listbox.Options>
                    </Transition>
                  </div>
                </Listbox>
              </div>
            </div>
            {/* <button
              className='text-sm font-medium text-white bg-indigo-900 rounded-md w-24 h-12 flex justify-center items-center'
              disabled={loading}
              onClick={() =>
                updateProfile({
                  username,
                  first_name,
                  last_name,
                  email,
                  bio,
                  website,
                })
              }>
              {loading ? 'Updating...' : 'Update'}
            </button> */}
          </div>
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps() {
  return {
    props: {
      protected: true,
    },
  }
}
